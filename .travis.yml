language: cpp

compiler: gcc
env:
  global:
    - COMPILER=g++-4.9
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
	- secure: "UvBTbYlSX1tghPAs9TageRzO8b/L0zqTgF22wxS3gW6ni02Yz7QYUJfZsl1yNwxuqBser6m9mXqJIfODopkVgZWI7Wx8jLtw1Ij04zOobISO9v+0AF3sSmBope8XyAhOmDjlsQ4lMkz7PNYWOEICMrTAF7tbmaYVDluU3FIGN2RAQH0st0gJqasZNEeQn4VSfhh0jkitK+e26DIB5rzcBS1igQyLpObXudXOtIeGrYuvpZsqXtnuz4ZTwSiYOXl2D5Z7eFcT0DGtv9k3V4FkIPZDH38THw/9RWGQB9C10KNGCn6kWozjLp/6rKtfpE8af4+PCvUFApVM0T9SGChQMuc9HU70x+H3fCOhDcevqT2rv2z1pCOtHS6ml2HU8FbTI9kMgn6WL1Ugwuws8X23d49iLaFLSlmhnyF+eMRbArun1GdJhVX4XW86TP8T8ZdDUGbHB4sfg+rA+L0blrAbzX6LGban2/45jsKtwc69bDFNLue3QSgPMBZBdeCPVFP9CfgQTj4L8Su1os3O/e8za8XlAeheA6WR7hwlmOUPOB+EvTaLx+PpEd39JJebfQVOFmrDvOtMOIFuG0cjLjXcPYGohyArE5kyNv/GDYPdihnfES+BD/uOtTPQ6BsjSrdH7+xLPWDJjYHLs4LiJh1tXCf1ScQURRP+LokkrXu+zGM="

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test']
    packages: ['g++-4.9','valgrind']
  coverity_scan:
    project:
      name: "FragJage/MongooseCpp"
      description: "Mongoose cpp wrapper"
    notification_email: inscrip.jage@free.fr
    build_command_prepend: "cov-configure --comptype g++ --compiler $COMPILER --template && cmake . -G'Unix Makefiles' -DCMAKE_CXX_COMPILER=$(which $COMPILER)"
    build_command: "make"
    branch_pattern: coverity_branch
    
install:
  - pip install --user git+git://github.com/eddyxu/cpp-coveralls.git
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

script:
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then cmake . -G"Unix Makefiles" -DCMAKE_CXX_COMPILER=$(which $COMPILER); fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then make; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ls ./src; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ls ./test/bin; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ./test/bin/unittest; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ls ./test/bin; fi

after_success:
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then valgrind --error-exitcode=1 --leak-check=full ./test/bin/unittest; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ls ./test/bin; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then sudo pip install -U "cpp-coveralls"; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then ls ./test/bin; fi
  - if [ "$COVERITY_SCAN_BRANCH" != 1 ]; then coveralls --include src --gcov-options '\-lp' --gcov 'gcov-4.9'; fi
  